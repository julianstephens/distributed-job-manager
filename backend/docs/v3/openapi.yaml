openapi: 3.0.1
info:
  contact: {}
  description: REST API for managing task scheduling
  title: DTS API
  version: 0.1.0
servers:
- url: http://localhost:8080/api/v1
paths:
  /tasks:
    get:
      description: retrieves all tasks
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPResponse-array_model_Task"
          description: OK
        "500":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get all tasks
      tags:
      - tasks
    put:
      description: creates or updates a task
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPResponse-model_Task"
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPError"
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Put a task
      tags:
      - tasks
  /tasks/{task_id}:
    delete:
      description: deletes a specific task
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPResponse-model_Task"
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPError"
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a task
      tags:
      - tasks
    get:
      description: retrieves a task by its ID
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPResponse-model_Task"
          description: OK
        "500":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/httputil.HTTPError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a specific task
      tags:
      - tasks
components:
  schemas:
    httputil.HTTPError:
      example:
        code: 400
        message: status bad request
      properties:
        code:
          example: 400
          type: integer
        message:
          example: status bad request
          type: string
      type: object
    httputil.HTTPResponse-array_model_Task:
      example:
        data:
        - recurrence: 6
          createdAt: 0
          scheduledTime: 1
          description: description
          id: id
          title: title
          version: version
          status: 5
          updatedAt: 5
        - recurrence: 6
          createdAt: 0
          scheduledTime: 1
          description: description
          id: id
          title: title
          version: version
          status: 5
          updatedAt: 5
        message: message
      properties:
        data:
          items:
            $ref: "#/components/schemas/model.Task"
          type: array
        message:
          type: string
      type: object
    httputil.HTTPResponse-model_Task:
      example:
        data:
          recurrence: 6
          createdAt: 0
          scheduledTime: 1
          description: description
          id: id
          title: title
          version: version
          status: 5
          updatedAt: 5
        message: message
      properties:
        data:
          $ref: "#/components/schemas/model.Task"
        message:
          type: string
      type: object
    model.Task:
      example:
        recurrence: 6
        createdAt: 0
        scheduledTime: 1
        description: description
        id: id
        title: title
        version: version
        status: 5
        updatedAt: 5
      properties:
        createdAt:
          type: integer
        description:
          type: string
        id:
          type: string
        recurrence:
          $ref: "#/components/schemas/model.TaskRecurrence"
        scheduledTime:
          type: integer
        status:
          $ref: "#/components/schemas/model.TaskStatus"
        title:
          type: string
        updatedAt:
          type: integer
        version:
          type: string
      required:
      - recurrence
      - scheduledTime
      - status
      - title
      type: object
    model.TaskRecurrence:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      x-enum-varnames:
      - Once
      - Daily
      - Weekly
      - Monthly
    model.TaskStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
      x-enum-varnames:
      - StatusPending
      - StatusInProgress
      - StatusCompleted
      - StatusFailed
      - StatusCancelled
  securitySchemes:
    ApiKey:
      description: User-specific API key
      in: header
      name: X-API-KEY
      type: apiKey
x-original-swagger-version: "2.0"
